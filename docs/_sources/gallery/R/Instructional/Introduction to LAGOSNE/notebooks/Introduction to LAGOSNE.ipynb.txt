{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Chemical Properties of Lakes: Introduction to the Lake Multi-Scaled Geospatial and Temporal Database (LAGOSNE)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This lesson was adapted from educational material written by [Dr. Kateri Salk](https://www.hydroshare.org/user/4912/) for her Fall 2019 Hydrologic Data Analysis course at Duke University. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Introduction\n",
    "Trophic states are based on lake fertility.  The root “trophy” means nutrients; therefore, lakes are classified based on the amount of available nutrients for organisms.  More fertile lakes have more nutrients and therefore more plants and algae. There are four lake trophic states:\n",
    "\n",
    "“Oligo” means very little; therefore, oligotrophic means very little nutrients (Phosphorus and Nitrogen). In oligotrophic lakes, oxygen is found at high levels throughout the water column. Cold water can hold more dissolved oxygen than warm water, and the deep region of oligotrophic lakes stays very cold. In addition, low algal concentration allows deeper light penetration and less decomposition.\n",
    "\n",
    "“Meso” means middle or mid; therefore, mesotrophic means a medium amount of nutrients (Phosphorus and Nitrogen). Mesotrophic lakes behave differently than oligotrophic lakes in that they stratify, meaning they separate into layers in the summer (more on lake stratification). The top layer of water becomes warm from the sun and contains algae. Since the by-product of photosynthesis is oxygen, oxygen concentration remains high at the surface of the lake. The bottom layer remains cooler and can become anoxic in mid-summer. \n",
    "\n",
    "“Eu” means true; therefore, eutrophic literally means true nutrients or truly nutrient rich (Phosphorus and Nitrogen). Eutrophic lakes are found in southern Minnesota where the soils are more fertile and where there is a lot of farmland. Eutrophic lakes are shallow and have murky water and mucky, soft bottoms.\n",
    "\n",
    "Hypereutrophic lakes are at the extreme end of the eutrophic range with exceedingly\n",
    "high nutrient concentrations and associated biomass production. In temperate regions\n",
    "the fish communities are dominated by roach and bream. Anoxia or complete loss of oxygen often occurs\n",
    "in the hypolimnion during summer stratification. \n",
    "\n",
    "For more information on lake trophic states, please visit http://www.lake.wateratlas.usf.edu/library/learn-more/learnmore.aspx?toolsection=lm_tsi and http://www.manitowoccountylakesassociation.org/oligotrophic-vs-mesotrophic-vs-eutrophic/. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Learning Objectives \n",
    "\n",
    "After successfully completing this exercise, you will be able to:\n",
    "\n",
    "1. Navigate and explore the LAGOSNE database and R package\n",
    "2. Evaluate lake water quality using the trophic state index\n",
    "3. Analyze spatial and temporal patterns of water quality across the northeast U.S."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Requirements to Complete Lesson "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Packages \n",
    "This lesson requires the installation of the following R packages to run the provided script:\n",
    "- `tidyverse`- Version 1.3.0. A collection of R packages designed for data science. \n",
    "- `lubridate`- Version 1.7.9. Functions for working with dates/times. \n",
    "- `ggplot2`- Version 3.3.3. Creates elegant data visualisations using the Grammar of Graphics.\n",
    "- `scales`- Version 1.1.1. Graphical scales provide methods for automatically determining breaks and labels for axes and legends.\n",
    "- `repr`- Version 1.1.0. String and binary representations of objects for several formats / mime types.\n",
    "- `LAGOSNE`- Version 2.0.2. Client for programmatic access to the Lake Multi-scaled Geospatial and Temporal database <https://lagoslakes.org>, with functions for accessing lake water quality and ecological context data for the US."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data and Code \n",
    "\n",
    "This lesson will query data from LAGOSNE, a combination of three data modules (LAGOSlocus, LAGOSlimno, LAGOSgeo) designed to be of use for researchers and managers to facilitate further development of our basic understanding of lake water quality at broad scales using water quality data on thousands of lakes collected over the last several decades. The database includes information about lakes in a lake-rich region of 17 states in the United States, including Minnesota, Iowa, Wisconsin, Illinois, Missouri, Michigan, Indiana, Ohio, Pennsylvania, New York, New Jersey, Connecticut, New Hampshire, Rhode Island, Massachusetts, Vermont, and Maine. LAGOSNE contains a complete census of all lakes greater than 4 hectares in the region with supporting ecological context information. Additionally, for a subset of lakes, LAGOSNE contains water quality data. The LAGOSNE package was built so that future data users could easily retrieve and manipulate the data, as well as easily access metadata.\n",
    "\n",
    "It should be noted that the databases are not static as data is constantly being added.  For more in-depth information on the `LAGOSNE` package, please visit https://github.com/cont-limno/LAGOSNE and \n",
    "https://cont-limno.github.io/LAGOSNE/articles/lagosne_structure.html."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The code provided in this resource was developed using R version 3.6.1. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Set Working Directory "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In R, the working directory is the directory where R starts when looking for any file to open (as directed by a file path) and where it saves any output. This lesson assumes that you have set your working directory to the folder location of the downloaded and unzipped data subsets."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Load Packages and set ggplot theme"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "── \u001b[1mAttaching packages\u001b[22m ─────────────────────────────────────── tidyverse 1.3.0 ──\n",
      "\n",
      "\u001b[32m✓\u001b[39m \u001b[34mggplot2\u001b[39m 3.3.3     \u001b[32m✓\u001b[39m \u001b[34mpurrr  \u001b[39m 0.3.4\n",
      "\u001b[32m✓\u001b[39m \u001b[34mtibble \u001b[39m 3.0.4     \u001b[32m✓\u001b[39m \u001b[34mdplyr  \u001b[39m 1.0.2\n",
      "\u001b[32m✓\u001b[39m \u001b[34mtidyr  \u001b[39m 1.1.2     \u001b[32m✓\u001b[39m \u001b[34mstringr\u001b[39m 1.4.0\n",
      "\u001b[32m✓\u001b[39m \u001b[34mreadr  \u001b[39m 1.4.0     \u001b[32m✓\u001b[39m \u001b[34mforcats\u001b[39m 0.5.0\n",
      "\n",
      "── \u001b[1mConflicts\u001b[22m ────────────────────────────────────────── tidyverse_conflicts() ──\n",
      "\u001b[31mx\u001b[39m \u001b[34mdplyr\u001b[39m::\u001b[32mfilter()\u001b[39m masks \u001b[34mstats\u001b[39m::filter()\n",
      "\u001b[31mx\u001b[39m \u001b[34mdplyr\u001b[39m::\u001b[32mlag()\u001b[39m    masks \u001b[34mstats\u001b[39m::lag()\n",
      "\n",
      "\n",
      "Attaching package: ‘lubridate’\n",
      "\n",
      "\n",
      "The following objects are masked from ‘package:base’:\n",
      "\n",
      "    date, intersect, setdiff, union\n",
      "\n",
      "\n",
      "\n",
      "Attaching package: ‘scales’\n",
      "\n",
      "\n",
      "The following object is masked from ‘package:purrr’:\n",
      "\n",
      "    discard\n",
      "\n",
      "\n",
      "The following object is masked from ‘package:readr’:\n",
      "\n",
      "    col_factor\n",
      "\n",
      "\n",
      "Downloading the 'locus' module ...\n",
      "\n",
      "Downloading LAGOSNE_lakeslocus101.csv ...\n",
      "\n",
      "Downloading the 'limno' module ...\n",
      "\n",
      "Downloading epi_waterquality10873.csv ...\n",
      "\n",
      "Downloading lakeslimno10873.csv ...\n",
      "\n",
      "Downloading sourceprogram10873.csv ...\n",
      "\n",
      "Downloading the 'geo' module ...\n",
      "\n",
      "Downloading LAGOSNE_buffer100m_105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_buffer100m_lulc105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_buffer500m_105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_buffer500m_conn105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_buffer500m_lulc105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_county_105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_county_chag105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_county_conn105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_county_lulc105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_edu_105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_edu_chag105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_edu_conn105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_edu_lulc105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_hu4_105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_hu4_chag105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_hu4_conn105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_hu4_lulc105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_hu8_105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_hu8_chag105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_hu8_conn105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_hu8_lulc105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_hu12_105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_hu12_chag105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_hu12_conn105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_hu12_lulc105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_iws_105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_iws_conn105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_iws_lulc105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_lakesgeo105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_state_105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_state_chag105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_state_conn105.csv ...\n",
      "\n",
      "Downloading LAGOSNE_state_lulc105.csv ...\n",
      "\n",
      "LAGOSNE downloaded. Now compressing to native R object ...\n",
      "\n",
      "\n",
      "  Reading geo county data [==========>---------------------------------------]\n",
      "\n",
      "  Reading geo edu data [=================>-----------------------------------]\n",
      "\n",
      "  Reading geo huc4 data [======================>-----------------------------]\n",
      "\n",
      "  Reading geo huc8 data [============================>-----------------------]\n",
      "\n",
      "  Reading geo huc12 data [=================================>-----------------]\n",
      "\n",
      "  Reading geo iws data [========================================>------------]\n",
      "\n",
      "  Reading geo buffer data [===========================================>------]\n",
      "\n",
      "  Reading lake locus data [==================================================]\n",
      "\n",
      "\n",
      "LAGOSNE compiled to /Users/gabrielagarcia/Library/Application Support/LAGOSNE//data_1.087.3.qs\n",
      "\n"
     ]
    }
   ],
   "source": [
    "options(warn=-1)\n",
    "\n",
    "library(tidyverse)\n",
    "library(lubridate)\n",
    "library(ggplot2)\n",
    "library(scales)\n",
    "library(repr)\n",
    "library(LAGOSNE)\n",
    "lagosne_get(dest_folder = LAGOSNE:::lagos_path(), overwrite = TRUE) #this will take a couple of minutes to load all of the CSVs\n",
    "\n",
    "theme_set(theme_classic()) \n",
    "options(scipen = 100) #remove scientific notation from data frames"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Import LAGOSNE data and view the names of all 37 of the data frames"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>'county'</li><li>'county.chag'</li><li>'county.conn'</li><li>'county.lulc'</li><li>'edu'</li><li>'edu.chag'</li><li>'edu.conn'</li><li>'edu.lulc'</li><li>'hu4'</li><li>'hu4.chag'</li><li>'hu4.conn'</li><li>'hu4.lulc'</li><li>'hu8'</li><li>'hu8.chag'</li><li>'hu8.conn'</li><li>'hu8.lulc'</li><li>'hu12'</li><li>'hu12.chag'</li><li>'hu12.conn'</li><li>'hu12.lulc'</li><li>'iws'</li><li>'iws.conn'</li><li>'iws.lulc'</li><li>'state'</li><li>'state.chag'</li><li>'state.conn'</li><li>'state.lulc'</li><li>'buffer100m'</li><li>'buffer100m.lulc'</li><li>'buffer500m'</li><li>'buffer500m.conn'</li><li>'buffer500m.lulc'</li><li>'lakes.geo'</li><li>'epi_nutr'</li><li>'lakes_limno'</li><li>'lagos_source_program'</li><li>'locus'</li></ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'county'\n",
       "\\item 'county.chag'\n",
       "\\item 'county.conn'\n",
       "\\item 'county.lulc'\n",
       "\\item 'edu'\n",
       "\\item 'edu.chag'\n",
       "\\item 'edu.conn'\n",
       "\\item 'edu.lulc'\n",
       "\\item 'hu4'\n",
       "\\item 'hu4.chag'\n",
       "\\item 'hu4.conn'\n",
       "\\item 'hu4.lulc'\n",
       "\\item 'hu8'\n",
       "\\item 'hu8.chag'\n",
       "\\item 'hu8.conn'\n",
       "\\item 'hu8.lulc'\n",
       "\\item 'hu12'\n",
       "\\item 'hu12.chag'\n",
       "\\item 'hu12.conn'\n",
       "\\item 'hu12.lulc'\n",
       "\\item 'iws'\n",
       "\\item 'iws.conn'\n",
       "\\item 'iws.lulc'\n",
       "\\item 'state'\n",
       "\\item 'state.chag'\n",
       "\\item 'state.conn'\n",
       "\\item 'state.lulc'\n",
       "\\item 'buffer100m'\n",
       "\\item 'buffer100m.lulc'\n",
       "\\item 'buffer500m'\n",
       "\\item 'buffer500m.conn'\n",
       "\\item 'buffer500m.lulc'\n",
       "\\item 'lakes.geo'\n",
       "\\item 'epi\\_nutr'\n",
       "\\item 'lakes\\_limno'\n",
       "\\item 'lagos\\_source\\_program'\n",
       "\\item 'locus'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'county'\n",
       "2. 'county.chag'\n",
       "3. 'county.conn'\n",
       "4. 'county.lulc'\n",
       "5. 'edu'\n",
       "6. 'edu.chag'\n",
       "7. 'edu.conn'\n",
       "8. 'edu.lulc'\n",
       "9. 'hu4'\n",
       "10. 'hu4.chag'\n",
       "11. 'hu4.conn'\n",
       "12. 'hu4.lulc'\n",
       "13. 'hu8'\n",
       "14. 'hu8.chag'\n",
       "15. 'hu8.conn'\n",
       "16. 'hu8.lulc'\n",
       "17. 'hu12'\n",
       "18. 'hu12.chag'\n",
       "19. 'hu12.conn'\n",
       "20. 'hu12.lulc'\n",
       "21. 'iws'\n",
       "22. 'iws.conn'\n",
       "23. 'iws.lulc'\n",
       "24. 'state'\n",
       "25. 'state.chag'\n",
       "26. 'state.conn'\n",
       "27. 'state.lulc'\n",
       "28. 'buffer100m'\n",
       "29. 'buffer100m.lulc'\n",
       "30. 'buffer500m'\n",
       "31. 'buffer500m.conn'\n",
       "32. 'buffer500m.lulc'\n",
       "33. 'lakes.geo'\n",
       "34. 'epi_nutr'\n",
       "35. 'lakes_limno'\n",
       "36. 'lagos_source_program'\n",
       "37. 'locus'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       " [1] \"county\"               \"county.chag\"          \"county.conn\"         \n",
       " [4] \"county.lulc\"          \"edu\"                  \"edu.chag\"            \n",
       " [7] \"edu.conn\"             \"edu.lulc\"             \"hu4\"                 \n",
       "[10] \"hu4.chag\"             \"hu4.conn\"             \"hu4.lulc\"            \n",
       "[13] \"hu8\"                  \"hu8.chag\"             \"hu8.conn\"            \n",
       "[16] \"hu8.lulc\"             \"hu12\"                 \"hu12.chag\"           \n",
       "[19] \"hu12.conn\"            \"hu12.lulc\"            \"iws\"                 \n",
       "[22] \"iws.conn\"             \"iws.lulc\"             \"state\"               \n",
       "[25] \"state.chag\"           \"state.conn\"           \"state.lulc\"          \n",
       "[28] \"buffer100m\"           \"buffer100m.lulc\"      \"buffer500m\"          \n",
       "[31] \"buffer500m.conn\"      \"buffer500m.lulc\"      \"lakes.geo\"           \n",
       "[34] \"epi_nutr\"             \"lakes_limno\"          \"lagos_source_program\"\n",
       "[37] \"locus\"               "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "LAGOSdata <- lagosne_load()\n",
    "names(LAGOSdata)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Create 3 new data frames from the following: locus, state, and epi_nutr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "LAGOSlocus <- LAGOSdata$locus #metadata\n",
    "LAGOSstate <- LAGOSdata$state #U.S. state information\n",
    "LAGOSnutrient <- LAGOSdata$epi_nutr #Epilimnion Water Quality Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "### View new data frames"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<caption>A data.frame: 6 × 18</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>lagoslakeid</th><th scope=col>nhdid</th><th scope=col>gnis_name</th><th scope=col>nhd_lat</th><th scope=col>nhd_long</th><th scope=col>lake_area_ha</th><th scope=col>lake_perim_meters</th><th scope=col>nhd_fcode</th><th scope=col>nhd_ftype</th><th scope=col>iws_zoneid</th><th scope=col>hu4_zoneid</th><th scope=col>hu6_zoneid</th><th scope=col>hu8_zoneid</th><th scope=col>hu12_zoneid</th><th scope=col>edu_zoneid</th><th scope=col>county_zoneid</th><th scope=col>state_zoneid</th><th scope=col>elevation_m</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>1</th><td>1</td><td>50524769 </td><td>NA         </td><td>42.54739</td><td>-73.17425</td><td>114.947012</td><td>9296.332</td><td>43613</td><td>436</td><td>IWS_45400</td><td>HU4_12</td><td>HU6_15</td><td>HU8_49</td><td>HU12_16694</td><td>EDU_75</td><td>County_319</td><td>State_2</td><td>295.855</td></tr>\n",
       "\t<tr><th scope=row>2</th><td>2</td><td>123632625</td><td>Benton Pond</td><td>42.18409</td><td>-73.04728</td><td> 24.865899</td><td>2938.701</td><td>39009</td><td>390</td><td>IWS_41585</td><td>HU4_7 </td><td>HU6_10</td><td>HU8_41</td><td>HU12_16612</td><td>EDU_27</td><td>County_319</td><td>State_2</td><td>447.835</td></tr>\n",
       "\t<tr><th scope=row>3</th><td>3</td><td>50524793 </td><td>NA         </td><td>42.53081</td><td>-73.19155</td><td> 75.410999</td><td>5821.829</td><td>43613</td><td>436</td><td>IWS_44511</td><td>HU4_12</td><td>HU6_15</td><td>HU8_49</td><td>HU12_16694</td><td>EDU_75</td><td>County_319</td><td>State_2</td><td>295.855</td></tr>\n",
       "\t<tr><th scope=row>4</th><td>4</td><td>135695054</td><td>Wedge Pond </td><td>42.45435</td><td>-71.14079</td><td>  9.255881</td><td>1416.710</td><td>39004</td><td>390</td><td>IWS_42712</td><td>HU4_10</td><td>HU6_11</td><td>HU8_35</td><td>HU12_16625</td><td>EDU_58</td><td>County_326</td><td>State_2</td><td>  4.256</td></tr>\n",
       "\t<tr><th scope=row>5</th><td>5</td><td>135693974</td><td>Beck Pond  </td><td>42.60405</td><td>-70.82267</td><td> 13.998481</td><td>2012.668</td><td>39004</td><td>390</td><td>IWS_42817</td><td>HU4_10</td><td>HU6_11</td><td>HU8_35</td><td>HU12_16621</td><td>EDU_58</td><td>County_322</td><td>State_2</td><td> 13.650</td></tr>\n",
       "\t<tr><th scope=row>6</th><td>6</td><td>122373608</td><td>Alum Pond  </td><td>42.14209</td><td>-72.11992</td><td> 80.290834</td><td>4911.859</td><td>39010</td><td>390</td><td>IWS_43912</td><td>HU4_11</td><td>HU6_12</td><td>HU8_47</td><td>HU12_16684</td><td>EDU_27</td><td>County_331</td><td>State_2</td><td>219.804</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A data.frame: 6 × 18\n",
       "\\begin{tabular}{r|llllllllllllllllll}\n",
       "  & lagoslakeid & nhdid & gnis\\_name & nhd\\_lat & nhd\\_long & lake\\_area\\_ha & lake\\_perim\\_meters & nhd\\_fcode & nhd\\_ftype & iws\\_zoneid & hu4\\_zoneid & hu6\\_zoneid & hu8\\_zoneid & hu12\\_zoneid & edu\\_zoneid & county\\_zoneid & state\\_zoneid & elevation\\_m\\\\\n",
       "  & <int> & <chr> & <chr> & <dbl> & <dbl> & <dbl> & <dbl> & <int> & <int> & <chr> & <chr> & <chr> & <chr> & <chr> & <chr> & <chr> & <chr> & <dbl>\\\\\n",
       "\\hline\n",
       "\t1 & 1 & 50524769  & NA          & 42.54739 & -73.17425 & 114.947012 & 9296.332 & 43613 & 436 & IWS\\_45400 & HU4\\_12 & HU6\\_15 & HU8\\_49 & HU12\\_16694 & EDU\\_75 & County\\_319 & State\\_2 & 295.855\\\\\n",
       "\t2 & 2 & 123632625 & Benton Pond & 42.18409 & -73.04728 &  24.865899 & 2938.701 & 39009 & 390 & IWS\\_41585 & HU4\\_7  & HU6\\_10 & HU8\\_41 & HU12\\_16612 & EDU\\_27 & County\\_319 & State\\_2 & 447.835\\\\\n",
       "\t3 & 3 & 50524793  & NA          & 42.53081 & -73.19155 &  75.410999 & 5821.829 & 43613 & 436 & IWS\\_44511 & HU4\\_12 & HU6\\_15 & HU8\\_49 & HU12\\_16694 & EDU\\_75 & County\\_319 & State\\_2 & 295.855\\\\\n",
       "\t4 & 4 & 135695054 & Wedge Pond  & 42.45435 & -71.14079 &   9.255881 & 1416.710 & 39004 & 390 & IWS\\_42712 & HU4\\_10 & HU6\\_11 & HU8\\_35 & HU12\\_16625 & EDU\\_58 & County\\_326 & State\\_2 &   4.256\\\\\n",
       "\t5 & 5 & 135693974 & Beck Pond   & 42.60405 & -70.82267 &  13.998481 & 2012.668 & 39004 & 390 & IWS\\_42817 & HU4\\_10 & HU6\\_11 & HU8\\_35 & HU12\\_16621 & EDU\\_58 & County\\_322 & State\\_2 &  13.650\\\\\n",
       "\t6 & 6 & 122373608 & Alum Pond   & 42.14209 & -72.11992 &  80.290834 & 4911.859 & 39010 & 390 & IWS\\_43912 & HU4\\_11 & HU6\\_12 & HU8\\_47 & HU12\\_16684 & EDU\\_27 & County\\_331 & State\\_2 & 219.804\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 6 × 18\n",
       "\n",
       "| <!--/--> | lagoslakeid &lt;int&gt; | nhdid &lt;chr&gt; | gnis_name &lt;chr&gt; | nhd_lat &lt;dbl&gt; | nhd_long &lt;dbl&gt; | lake_area_ha &lt;dbl&gt; | lake_perim_meters &lt;dbl&gt; | nhd_fcode &lt;int&gt; | nhd_ftype &lt;int&gt; | iws_zoneid &lt;chr&gt; | hu4_zoneid &lt;chr&gt; | hu6_zoneid &lt;chr&gt; | hu8_zoneid &lt;chr&gt; | hu12_zoneid &lt;chr&gt; | edu_zoneid &lt;chr&gt; | county_zoneid &lt;chr&gt; | state_zoneid &lt;chr&gt; | elevation_m &lt;dbl&gt; |\n",
       "|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n",
       "| 1 | 1 | 50524769  | NA          | 42.54739 | -73.17425 | 114.947012 | 9296.332 | 43613 | 436 | IWS_45400 | HU4_12 | HU6_15 | HU8_49 | HU12_16694 | EDU_75 | County_319 | State_2 | 295.855 |\n",
       "| 2 | 2 | 123632625 | Benton Pond | 42.18409 | -73.04728 |  24.865899 | 2938.701 | 39009 | 390 | IWS_41585 | HU4_7  | HU6_10 | HU8_41 | HU12_16612 | EDU_27 | County_319 | State_2 | 447.835 |\n",
       "| 3 | 3 | 50524793  | NA          | 42.53081 | -73.19155 |  75.410999 | 5821.829 | 43613 | 436 | IWS_44511 | HU4_12 | HU6_15 | HU8_49 | HU12_16694 | EDU_75 | County_319 | State_2 | 295.855 |\n",
       "| 4 | 4 | 135695054 | Wedge Pond  | 42.45435 | -71.14079 |   9.255881 | 1416.710 | 39004 | 390 | IWS_42712 | HU4_10 | HU6_11 | HU8_35 | HU12_16625 | EDU_58 | County_326 | State_2 |   4.256 |\n",
       "| 5 | 5 | 135693974 | Beck Pond   | 42.60405 | -70.82267 |  13.998481 | 2012.668 | 39004 | 390 | IWS_42817 | HU4_10 | HU6_11 | HU8_35 | HU12_16621 | EDU_58 | County_322 | State_2 |  13.650 |\n",
       "| 6 | 6 | 122373608 | Alum Pond   | 42.14209 | -72.11992 |  80.290834 | 4911.859 | 39010 | 390 | IWS_43912 | HU4_11 | HU6_12 | HU8_47 | HU12_16684 | EDU_27 | County_331 | State_2 | 219.804 |\n",
       "\n"
      ],
      "text/plain": [
       "  lagoslakeid nhdid     gnis_name   nhd_lat  nhd_long  lake_area_ha\n",
       "1 1           50524769  NA          42.54739 -73.17425 114.947012  \n",
       "2 2           123632625 Benton Pond 42.18409 -73.04728  24.865899  \n",
       "3 3           50524793  NA          42.53081 -73.19155  75.410999  \n",
       "4 4           135695054 Wedge Pond  42.45435 -71.14079   9.255881  \n",
       "5 5           135693974 Beck Pond   42.60405 -70.82267  13.998481  \n",
       "6 6           122373608 Alum Pond   42.14209 -72.11992  80.290834  \n",
       "  lake_perim_meters nhd_fcode nhd_ftype iws_zoneid hu4_zoneid hu6_zoneid\n",
       "1 9296.332          43613     436       IWS_45400  HU4_12     HU6_15    \n",
       "2 2938.701          39009     390       IWS_41585  HU4_7      HU6_10    \n",
       "3 5821.829          43613     436       IWS_44511  HU4_12     HU6_15    \n",
       "4 1416.710          39004     390       IWS_42712  HU4_10     HU6_11    \n",
       "5 2012.668          39004     390       IWS_42817  HU4_10     HU6_11    \n",
       "6 4911.859          39010     390       IWS_43912  HU4_11     HU6_12    \n",
       "  hu8_zoneid hu12_zoneid edu_zoneid county_zoneid state_zoneid elevation_m\n",
       "1 HU8_49     HU12_16694  EDU_75     County_319    State_2      295.855    \n",
       "2 HU8_41     HU12_16612  EDU_27     County_319    State_2      447.835    \n",
       "3 HU8_49     HU12_16694  EDU_75     County_319    State_2      295.855    \n",
       "4 HU8_35     HU12_16625  EDU_58     County_326    State_2        4.256    \n",
       "5 HU8_35     HU12_16621  EDU_58     County_322    State_2       13.650    \n",
       "6 HU8_47     HU12_16684  EDU_27     County_331    State_2      219.804    "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "head(LAGOSlocus)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<caption>A data.frame: 6 × 8</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>state</th><th scope=col>state_name</th><th scope=col>state_zoneid</th><th scope=col>state_lat</th><th scope=col>state_long</th><th scope=col>state_pct_in_nwi</th><th scope=col>state_ha_in_nwi</th><th scope=col>state_ha</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>1</th><td>ME</td><td>Maine      </td><td>State_1 </td><td>45.38166</td><td>-69.23067</td><td>100</td><td> 8412288</td><td> 8412288</td></tr>\n",
       "\t<tr><th scope=row>2</th><td>CT</td><td>Connecticut</td><td>State_10</td><td>41.62171</td><td>-72.72643</td><td>100</td><td> 1287793</td><td> 1287793</td></tr>\n",
       "\t<tr><th scope=row>3</th><td>IL</td><td>Illinois   </td><td>State_11</td><td>40.06480</td><td>-89.19829</td><td>100</td><td>14592003</td><td>14592003</td></tr>\n",
       "\t<tr><th scope=row>4</th><td>IN</td><td>Indiana    </td><td>State_12</td><td>39.90813</td><td>-86.27554</td><td>100</td><td> 9371664</td><td> 9371664</td></tr>\n",
       "\t<tr><th scope=row>5</th><td>IA</td><td>Iowa       </td><td>State_13</td><td>42.07456</td><td>-93.49983</td><td>100</td><td>14573561</td><td>14573561</td></tr>\n",
       "\t<tr><th scope=row>6</th><td>MN</td><td>Minnesota  </td><td>State_14</td><td>46.31652</td><td>-94.30929</td><td>100</td><td>21854347</td><td>21854347</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A data.frame: 6 × 8\n",
       "\\begin{tabular}{r|llllllll}\n",
       "  & state & state\\_name & state\\_zoneid & state\\_lat & state\\_long & state\\_pct\\_in\\_nwi & state\\_ha\\_in\\_nwi & state\\_ha\\\\\n",
       "  & <chr> & <chr> & <chr> & <dbl> & <dbl> & <int> & <dbl> & <dbl>\\\\\n",
       "\\hline\n",
       "\t1 & ME & Maine       & State\\_1  & 45.38166 & -69.23067 & 100 &  8412288 &  8412288\\\\\n",
       "\t2 & CT & Connecticut & State\\_10 & 41.62171 & -72.72643 & 100 &  1287793 &  1287793\\\\\n",
       "\t3 & IL & Illinois    & State\\_11 & 40.06480 & -89.19829 & 100 & 14592003 & 14592003\\\\\n",
       "\t4 & IN & Indiana     & State\\_12 & 39.90813 & -86.27554 & 100 &  9371664 &  9371664\\\\\n",
       "\t5 & IA & Iowa        & State\\_13 & 42.07456 & -93.49983 & 100 & 14573561 & 14573561\\\\\n",
       "\t6 & MN & Minnesota   & State\\_14 & 46.31652 & -94.30929 & 100 & 21854347 & 21854347\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 6 × 8\n",
       "\n",
       "| <!--/--> | state &lt;chr&gt; | state_name &lt;chr&gt; | state_zoneid &lt;chr&gt; | state_lat &lt;dbl&gt; | state_long &lt;dbl&gt; | state_pct_in_nwi &lt;int&gt; | state_ha_in_nwi &lt;dbl&gt; | state_ha &lt;dbl&gt; |\n",
       "|---|---|---|---|---|---|---|---|---|\n",
       "| 1 | ME | Maine       | State_1  | 45.38166 | -69.23067 | 100 |  8412288 |  8412288 |\n",
       "| 2 | CT | Connecticut | State_10 | 41.62171 | -72.72643 | 100 |  1287793 |  1287793 |\n",
       "| 3 | IL | Illinois    | State_11 | 40.06480 | -89.19829 | 100 | 14592003 | 14592003 |\n",
       "| 4 | IN | Indiana     | State_12 | 39.90813 | -86.27554 | 100 |  9371664 |  9371664 |\n",
       "| 5 | IA | Iowa        | State_13 | 42.07456 | -93.49983 | 100 | 14573561 | 14573561 |\n",
       "| 6 | MN | Minnesota   | State_14 | 46.31652 | -94.30929 | 100 | 21854347 | 21854347 |\n",
       "\n"
      ],
      "text/plain": [
       "  state state_name  state_zoneid state_lat state_long state_pct_in_nwi\n",
       "1 ME    Maine       State_1      45.38166  -69.23067  100             \n",
       "2 CT    Connecticut State_10     41.62171  -72.72643  100             \n",
       "3 IL    Illinois    State_11     40.06480  -89.19829  100             \n",
       "4 IN    Indiana     State_12     39.90813  -86.27554  100             \n",
       "5 IA    Iowa        State_13     42.07456  -93.49983  100             \n",
       "6 MN    Minnesota   State_14     46.31652  -94.30929  100             \n",
       "  state_ha_in_nwi state_ha\n",
       "1  8412288         8412288\n",
       "2  1287793         1287793\n",
       "3 14592003        14592003\n",
       "4  9371664         9371664\n",
       "5 14573561        14573561\n",
       "6 21854347        21854347"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "head(LAGOSstate)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<caption>A data.frame: 6 × 92</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>eventida10873</th><th scope=col>lagoslakeid</th><th scope=col>programid</th><th scope=col>sampledate</th><th scope=col>programname</th><th scope=col>programtype</th><th scope=col>chla</th><th scope=col>chla_qual</th><th scope=col>chla_censorcode</th><th scope=col>chla_detectionlimit</th><th scope=col>⋯</th><th scope=col>ton_labmethodname</th><th scope=col>tp</th><th scope=col>tp_qual</th><th scope=col>tp_censorcode</th><th scope=col>tp_detectionlimit</th><th scope=col>tp_labmethodname</th><th scope=col>secchi</th><th scope=col>secchi_qual</th><th scope=col>secchi_censorcode</th><th scope=col>secchi_methodinfo</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;date&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>⋯</th><th scope=col>&lt;lgl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>1</th><td>181212</td><td>126841</td><td>47</td><td>1985-11-05</td><td>NY_LCI_CHEM</td><td>State Agency</td><td>  8.40</td><td>NA</td><td>NC1</td><td>2</td><td>⋯</td><td>NA</td><td>100</td><td>NA</td><td>NC1</td><td>3</td><td>EPA_365.1</td><td>1.0000</td><td>NA</td><td>NC3</td><td>NA                 </td></tr>\n",
       "\t<tr><th scope=row>2</th><td>102404</td><td>  6456</td><td>11</td><td>2006-06-15</td><td>IL_ALMP    </td><td>State Agency</td><td>  5.64</td><td>NA</td><td>NC2</td><td>1</td><td>⋯</td><td>NA</td><td> 14</td><td>NA</td><td>NC2</td><td>4</td><td>MULTIPLE </td><td>2.2098</td><td>NA</td><td>NC4</td><td>SECCHI_VIEW_UNKNOWN</td></tr>\n",
       "\t<tr><th scope=row>3</th><td>102487</td><td>  6469</td><td>11</td><td>2006-06-19</td><td>IL_ALMP    </td><td>State Agency</td><td> 41.90</td><td>Q </td><td>NC1</td><td>1</td><td>⋯</td><td>NA</td><td> 88</td><td>NA</td><td>NC2</td><td>4</td><td>MULTIPLE </td><td>0.4572</td><td>NA</td><td>NC4</td><td>SECCHI_VIEW_UNKNOWN</td></tr>\n",
       "\t<tr><th scope=row>4</th><td>164262</td><td> 81320</td><td>47</td><td>1985-11-07</td><td>NY_LCI_CHEM</td><td>State Agency</td><td>  1.40</td><td>NA</td><td>LE1</td><td>2</td><td>⋯</td><td>NA</td><td>100</td><td>NA</td><td>NC1</td><td>3</td><td>EPA_365.1</td><td>0.5000</td><td>NA</td><td>NC3</td><td>NA                 </td></tr>\n",
       "\t<tr><th scope=row>5</th><td>179320</td><td>122514</td><td>47</td><td>1988-06-23</td><td>NY_LCI_CHEM</td><td>State Agency</td><td>133.20</td><td>NA</td><td>NC1</td><td>2</td><td>⋯</td><td>NA</td><td>700</td><td>NA</td><td>NC1</td><td>3</td><td>EPA_365.1</td><td>0.4000</td><td>NA</td><td>NC3</td><td>NA                 </td></tr>\n",
       "\t<tr><th scope=row>6</th><td>102364</td><td>  6450</td><td>11</td><td>2006-08-23</td><td>IL_ALMP    </td><td>State Agency</td><td> 12.30</td><td>NA</td><td>NC2</td><td>1</td><td>⋯</td><td>NA</td><td> 14</td><td>NA</td><td>NC2</td><td>4</td><td>MULTIPLE </td><td>0.9144</td><td>NA</td><td>NC4</td><td>SECCHI_VIEW_UNKNOWN</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A data.frame: 6 × 92\n",
       "\\begin{tabular}{r|lllllllllllllllllllll}\n",
       "  & eventida10873 & lagoslakeid & programid & sampledate & programname & programtype & chla & chla\\_qual & chla\\_censorcode & chla\\_detectionlimit & ⋯ & ton\\_labmethodname & tp & tp\\_qual & tp\\_censorcode & tp\\_detectionlimit & tp\\_labmethodname & secchi & secchi\\_qual & secchi\\_censorcode & secchi\\_methodinfo\\\\\n",
       "  & <int> & <int> & <int> & <date> & <chr> & <chr> & <dbl> & <chr> & <chr> & <dbl> & ⋯ & <lgl> & <dbl> & <chr> & <chr> & <dbl> & <chr> & <dbl> & <chr> & <chr> & <chr>\\\\\n",
       "\\hline\n",
       "\t1 & 181212 & 126841 & 47 & 1985-11-05 & NY\\_LCI\\_CHEM & State Agency &   8.40 & NA & NC1 & 2 & ⋯ & NA & 100 & NA & NC1 & 3 & EPA\\_365.1 & 1.0000 & NA & NC3 & NA                 \\\\\n",
       "\t2 & 102404 &   6456 & 11 & 2006-06-15 & IL\\_ALMP     & State Agency &   5.64 & NA & NC2 & 1 & ⋯ & NA &  14 & NA & NC2 & 4 & MULTIPLE  & 2.2098 & NA & NC4 & SECCHI\\_VIEW\\_UNKNOWN\\\\\n",
       "\t3 & 102487 &   6469 & 11 & 2006-06-19 & IL\\_ALMP     & State Agency &  41.90 & Q  & NC1 & 1 & ⋯ & NA &  88 & NA & NC2 & 4 & MULTIPLE  & 0.4572 & NA & NC4 & SECCHI\\_VIEW\\_UNKNOWN\\\\\n",
       "\t4 & 164262 &  81320 & 47 & 1985-11-07 & NY\\_LCI\\_CHEM & State Agency &   1.40 & NA & LE1 & 2 & ⋯ & NA & 100 & NA & NC1 & 3 & EPA\\_365.1 & 0.5000 & NA & NC3 & NA                 \\\\\n",
       "\t5 & 179320 & 122514 & 47 & 1988-06-23 & NY\\_LCI\\_CHEM & State Agency & 133.20 & NA & NC1 & 2 & ⋯ & NA & 700 & NA & NC1 & 3 & EPA\\_365.1 & 0.4000 & NA & NC3 & NA                 \\\\\n",
       "\t6 & 102364 &   6450 & 11 & 2006-08-23 & IL\\_ALMP     & State Agency &  12.30 & NA & NC2 & 1 & ⋯ & NA &  14 & NA & NC2 & 4 & MULTIPLE  & 0.9144 & NA & NC4 & SECCHI\\_VIEW\\_UNKNOWN\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 6 × 92\n",
       "\n",
       "| <!--/--> | eventida10873 &lt;int&gt; | lagoslakeid &lt;int&gt; | programid &lt;int&gt; | sampledate &lt;date&gt; | programname &lt;chr&gt; | programtype &lt;chr&gt; | chla &lt;dbl&gt; | chla_qual &lt;chr&gt; | chla_censorcode &lt;chr&gt; | chla_detectionlimit &lt;dbl&gt; | ⋯ ⋯ | ton_labmethodname &lt;lgl&gt; | tp &lt;dbl&gt; | tp_qual &lt;chr&gt; | tp_censorcode &lt;chr&gt; | tp_detectionlimit &lt;dbl&gt; | tp_labmethodname &lt;chr&gt; | secchi &lt;dbl&gt; | secchi_qual &lt;chr&gt; | secchi_censorcode &lt;chr&gt; | secchi_methodinfo &lt;chr&gt; |\n",
       "|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n",
       "| 1 | 181212 | 126841 | 47 | 1985-11-05 | NY_LCI_CHEM | State Agency |   8.40 | NA | NC1 | 2 | ⋯ | NA | 100 | NA | NC1 | 3 | EPA_365.1 | 1.0000 | NA | NC3 | NA                  |\n",
       "| 2 | 102404 |   6456 | 11 | 2006-06-15 | IL_ALMP     | State Agency |   5.64 | NA | NC2 | 1 | ⋯ | NA |  14 | NA | NC2 | 4 | MULTIPLE  | 2.2098 | NA | NC4 | SECCHI_VIEW_UNKNOWN |\n",
       "| 3 | 102487 |   6469 | 11 | 2006-06-19 | IL_ALMP     | State Agency |  41.90 | Q  | NC1 | 1 | ⋯ | NA |  88 | NA | NC2 | 4 | MULTIPLE  | 0.4572 | NA | NC4 | SECCHI_VIEW_UNKNOWN |\n",
       "| 4 | 164262 |  81320 | 47 | 1985-11-07 | NY_LCI_CHEM | State Agency |   1.40 | NA | LE1 | 2 | ⋯ | NA | 100 | NA | NC1 | 3 | EPA_365.1 | 0.5000 | NA | NC3 | NA                  |\n",
       "| 5 | 179320 | 122514 | 47 | 1988-06-23 | NY_LCI_CHEM | State Agency | 133.20 | NA | NC1 | 2 | ⋯ | NA | 700 | NA | NC1 | 3 | EPA_365.1 | 0.4000 | NA | NC3 | NA                  |\n",
       "| 6 | 102364 |   6450 | 11 | 2006-08-23 | IL_ALMP     | State Agency |  12.30 | NA | NC2 | 1 | ⋯ | NA |  14 | NA | NC2 | 4 | MULTIPLE  | 0.9144 | NA | NC4 | SECCHI_VIEW_UNKNOWN |\n",
       "\n"
      ],
      "text/plain": [
       "  eventida10873 lagoslakeid programid sampledate programname programtype \n",
       "1 181212        126841      47        1985-11-05 NY_LCI_CHEM State Agency\n",
       "2 102404          6456      11        2006-06-15 IL_ALMP     State Agency\n",
       "3 102487          6469      11        2006-06-19 IL_ALMP     State Agency\n",
       "4 164262         81320      47        1985-11-07 NY_LCI_CHEM State Agency\n",
       "5 179320        122514      47        1988-06-23 NY_LCI_CHEM State Agency\n",
       "6 102364          6450      11        2006-08-23 IL_ALMP     State Agency\n",
       "  chla   chla_qual chla_censorcode chla_detectionlimit ⋯ ton_labmethodname tp \n",
       "1   8.40 NA        NC1             2                   ⋯ NA                100\n",
       "2   5.64 NA        NC2             1                   ⋯ NA                 14\n",
       "3  41.90 Q         NC1             1                   ⋯ NA                 88\n",
       "4   1.40 NA        LE1             2                   ⋯ NA                100\n",
       "5 133.20 NA        NC1             2                   ⋯ NA                700\n",
       "6  12.30 NA        NC2             1                   ⋯ NA                 14\n",
       "  tp_qual tp_censorcode tp_detectionlimit tp_labmethodname secchi secchi_qual\n",
       "1 NA      NC1           3                 EPA_365.1        1.0000 NA         \n",
       "2 NA      NC2           4                 MULTIPLE         2.2098 NA         \n",
       "3 NA      NC2           4                 MULTIPLE         0.4572 NA         \n",
       "4 NA      NC1           3                 EPA_365.1        0.5000 NA         \n",
       "5 NA      NC1           3                 EPA_365.1        0.4000 NA         \n",
       "6 NA      NC2           4                 MULTIPLE         0.9144 NA         \n",
       "  secchi_censorcode secchi_methodinfo  \n",
       "1 NC3               NA                 \n",
       "2 NC4               SECCHI_VIEW_UNKNOWN\n",
       "3 NC4               SECCHI_VIEW_UNKNOWN\n",
       "4 NC3               NA                 \n",
       "5 NC3               NA                 \n",
       "6 NC4               SECCHI_VIEW_UNKNOWN"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "head(LAGOSnutrient)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  Convert \"lagoslakeid\" field from an integer to a factor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "LAGOSlocus$lagoslakeid <- as.factor(LAGOSlocus$lagoslakeid)\n",
    "LAGOSnutrient$lagoslakeid <- as.factor(LAGOSnutrient$lagoslakeid)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Wrangling data frames in LAGOSNE\n",
    "LAGOSNE is stored in several pieces, comprising metadata about given lakes (one observation per lake), metadata about each state (one observation per state), and data collected from lakes (one to many observations per lake over time). To connect observations from one data frame to the next, we need to find a common variable between the data frames.\n",
    "\n",
    "For example, let's find out how many lakes are in each state. Note that LAGOSlocus only includes the state_zoneid, whereas  LAGOSstate connects state_zoneid for each state."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Left Join LAGOSlocus and LAGOSstate data frames"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "LAGOSlocations <- left_join(LAGOSlocus, LAGOSstate, by = \"state_zoneid\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Order LAGOSlocations data frame by number of lakes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "LAGOSlocations <- \n",
    "  within(LAGOSlocations, \n",
    "         state <- factor(state, levels = names(sort(table(state), decreasing=TRUE))))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plot Number of Lakes by State "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nS89//vPzn7MWrmGBH/zgB/ls2v/7f/8vZSGghj2c2qULL7wwZUGm0PvjvvvuS4ccckjaZZdd\n4o+0UyvL9tx5551pn332STEjGTOu/dwGea5+9kPdBAiUJ+ASu/Is1USAAIFaCsQH/c9+9rPT\n9u2Zz3xmeuihh9Kf/vSnjtcffPDBtOeee6bnPe95KS4hHJftwAMPTF/84hfHpbt5Px9//PH0\nlre8JT388MMd/V5mmWXS2muvnZZccsl08803pz/84Q8dr//Xf/1XOuKII9JBBx3UsT+bfUwv\nfOELU1wW2+9tkOfqd1/UT4BAeQJmkMqzVBMBAgRqJ5BdhjjlA3988D3mmGPSLbfckv7v//4v\n/2CcXV6VzyC0A2SXmaV99923fVftH8cH7nHbTjnllPy90N7vr371q+nuu+/O70W6+OKL0x13\n3JHOOOOMKfceZZfapbhvqX2LwD2IcBTnHOS52vvoMQECoy0gII32+GgdAQIEhirwoQ99qGN2\naNVVV02/+MUvUnZPTFpttdXyti222GL5pVBnnnlm2mGHHTraG8HpV7/6Vcc+T+olcOmll3Z0\n6LWvfW3ab7/90tOe9rSO/fHeOOqoozr2PfDAA+nqq6/u2OcJAQIEhi3gErthj4DzEyBQWYFY\nxe3rX/96uvbaa9Pvf//7FJeVxepcz3rWs9JWW22Vdt9993zVrrl08Etf+lK69dZbOw5973vf\nO2190Y5TTz01v//jmmuuSWussUZ60YtelIeWuM8jAsxctrPOOiv953/+Z8ehce9I3F803TZ/\n/vz0b//2b/lqZTErsMIKK6Qtt9wyxT0nM22xwtm///u/p//5n//JL8N67LHH0oYbbpj+7u/+\nLsUqg+E40xarEsb9Ps0tjnnHO97RfNr6GffHxH1RzS3a3z6zFYHvu9/9bvPltPPOO6ett946\nxWxQ1P+zn/0st43LxbJFKtI73/nO9NznPrdVPh6cfvrpKbxihb/2LS4jiz7GFuecya79mEU9\njsAZfYk+RbiI9myxxRb5/TpLLLFE69B4P37hC19oPY8HH/7wh9Mqq6zSsa/5JMagve1///d/\nn7LFNpovL/JnrGzYvsXldHFv0bx589p354/f+MY35pfVxWV3T3/60/N/9957b/5ajP3BBx+c\n7rnnno7jov4I6rHFe/sDH/hAx+sxU/md73wn/ehHP8rHLGarwmLFFVdM66+/fr5CZFwC2N6e\n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\nSMAldiM0GJpCgAABAgTKEohLyWKWI2ZzrrzyyvzyuvZwFPe6lXF5XVntVQ8BAgRGRcAXxY7K\nSGgHAQIECBAoUSAuTYv7feLSvumupo/7meJeLRsBAgQIdAq4xK7TwzMCBAgQIFALgVg1r301\nxfZOZcu+54uNTLeqXXs5jwkQIDCOAi6xG8dR12cCBAgQqL1ArDzYvWhGLNoRKw3GUtjCUe3f\nAjpIgMAcBcwgzRHOYQQIECBAYNQFbrvtthQzSffee2++wlssqT7dEu2j3g/tI0CAwCAFBKRB\najsXAQIECBAgQIAAAQIjLeASu5EeHo0jQIAAAQIECBAgQGCQAgLSILWdiwABAgQIECBAgACB\nkRYQkEZ6eDSOAAECBAgQIECAAIFBCghIg9R2LgIECBAgQIAAAQIERlpAQBrp4dE4AgQIECBA\ngAABAgQGKSAgDVLbuQgQIECAAAECBAgQGGkBAWmkh0fjCBAgQIAAAQIECBAYpICANEht5yJA\ngAABAgQIECBAYKQFBKSRHh6NI0CAAAECBAgQIEBgkAIC0iC1nYsAAQIECBAgQIAAgZEWEJBG\neng0jgABAgQIECBAgACBQQoISCVr33nnnelXv/pVeuCBB0quWXUECBAgQIAAAQIECPRbQEAq\nWfi4445LL37xi9NZZ51Vcs2qI0CAAAECBAgQIECg3wICUr+F1U+AAAECBAgQIECAQGUEBKTK\nDJWGEiBAgAABAgQIECDQbwEBqd/C6idAgAABAgQIECBAoDICAlJlhkpDCRAgQIAAAQIECBDo\nt8DQA9INN9yQ3vSmN6VnP/vZ6XnPe17ab7/9pl0B7rzzzkt77bVXWmWVVdKWW26ZTjzxxCk2\nRco89NBD6fDDD0+bbbZZWnPNNdMee+yR7r777o66ipTpOMATAgQIECBAgAABAgRqITD0gLTr\nrrumq6++Oh166KHpfe97X/rxj3+cttlmm/T444+3gG+88ca0ww47pEajkY499tg83Oy+++7p\n+OOP76lMFF6wYEE68sgj0/77758HpYsuuihttdVW6dFHH23VVaRMq7AHBAgQIECAAAECBAjU\nRyALHUPbvv/97zcyycbFF1/casOpp56a78uWyW7tm5iYaGRLZ7eex4Ns5qex7rrrNp588sl8\nf5EyF1xwQWPevHmN0047rVXX9ddfn+/79re/ne8rUqZ18DQPDjvssLz9CxcunOZVuwgQIECA\nAAECBAgQGGWBoc4gbbHFFvmM0aabbtpKnEsuuWT++P77789/xheunnnmmWm33XZrlYkH8TwL\nN+mSSy7JL8mbrUwck4WvtNxyy+WzUfE8tnXWWSdtvvnm6aSTTsqfFymTF/QfAgQIECBAgAAB\nAgRqJzB/mD16znOek+JfbFmKzMPOIYccktZee+30qle9Kt9/7bXXpmyWKA8y+Y6n/hPBJrZb\nb701P3a2MhHCrrrqqrT66qunJZZY4qla/vIj6rryyivzJ0XKtB/8pz/9KV1xxRWtXXfccUda\nfPHFW889IECAAAECBAgQIECgOgJDDUjtTC972cvShRdemGIG6dJLL03LLLNM/nJzJmmllVZq\nL55WXHHF/HkEkmbZRZWJwlFXd5nYH3VFPbEVKZMXfOo/t99+e3rb297WvqvVno6dnhAgQIAA\nAQIECBAgMPICIxOQPve5z+Uh5Wtf+1q+St13v/vdtP3226fsnqEcsXvWZ/78vzT9kUceKVQm\nKom6uuuJ/VFX1BNbkTJ5waf+s+yyy6a99967tSsWfbj55ptbzz0gQIAAAQIECBAgQKA6AiMT\nkLbeeutc7Q1veENabbXV0pe//OU8IK266qr5/nvuuadDtfk8AkqRMnFwlIsV8bq3qCvqia1I\nmfbjY/bpoIMOau2KJcTjPiYbAQIECBAgQIAAAQLVExjqIg1xf1G2alyH2tOe9rS03XbbpZ/9\n7Gf5/mb4iUvZ2rfm87h/qEiZODbKNY/rrqt5T1ORMu3HekyAAAECBAgQIECAQH0EhhqQYrbl\nla98ZUdoeeyxx/JV65773Ofmyssvv3yKBRaypbk71ON5rEgXX/hapEwcHMHrtttuy+9xalZ2\n3333pXPOOSdtu+22+a4iZZrH+kmAAAECBAgQIECAQL0EhhqQ9ttvv3yFuve85z3p8ssvz1ex\ny77fKN11113pYx/7WEv6wAMPTGeccUY66qij0r333ptOOeWUdPTRR6cjjjiitSBCkTLxZbMb\nbLBB2nfffdM111yTr4C35557pjXWWCPF8bEVKdNqmAcECBAgQIAAAQIECNRKYKgBKWZ/vve9\n7+UzOhtvvHE+U3T22WenE044IcW9SM1tl112SbGIw4IFC/IV5w444IC0//77p3322adZJBUp\nEwswnH766flCDBGU1lprrfTggw/m51tqqaXyuoqUaZ3UAwIECBAgQIAAAQIEaiUwL77Fdtg9\niibcdNNNabHFFstncyKkTLc98cQTebl11123tXJdd7kiZeKYO++8Mz/fdMt+N+ssUqZZtvkz\nLhs8+OCD08KFC9POO+/c3O0nAQIECBAgQIAAAQIVEBiJVewiEMWXw862xXLc66233iKLFSkT\nFay88sqLrKdomVkrUYAAAQIECBAgQIAAgcoIDPUSu8ooaSgBAgQIECBAgAABAmMhICCNxTDr\nJAECBAgQIECAAAECRQQEpCJKyhAgQIAAAQIECBAgMBYCAtJYDLNOEiBAgAABAgQIECBQREBA\nKqKkDAECBAgQIECAAAECYyEgII3FMOskAQIECBAgQIAAAQJFBASkIkrKECBAgAABAgQIECAw\nFgIC0lgMs04SIECAAAECBAgQIFBEQEAqoqQMAQIECBAgQIAAAQJjISAgjcUw6yQBAgQIECBA\ngAABAkUEBKQiSsoQIECAAAECBAgQIDAWAgLSWAyzThIgQIAAAQIECBAgUERAQCqipAwBAgQI\nECBAgAABAmMhICCNxTDrJAECBAgQIECAAAECRQTmFymkTHkCExMT5VVWQk2Tk5Ml1KIKAgQI\nECBAgAABAvUQMINUj3HUCwIECBAgQIAAAQIEShAQkEpAVAUBAgQIECBAgAABAvUQEJDqMY56\nQYAAAQIECBAgQIBACQICUgmIqiBAgAABAgQIECBAoB4CAlI9xlEvCBAgQIAAAQIECBAoQUBA\nKgFRFQQIECBAgAABAgQI1ENAQKrHOOoFAQIECBAgQIAAAQIlCAhIJSCqggABAgQIECBAgACB\neggISPUYR70gQIAAAQIECBAgQKAEAQGpBERVECBAgAABAgQIECBQDwEBqR7jqBcECBAgQIAA\nAQIECJQgICCVgKgKAgQIECBAgAABAgTqISAg1WMc9YIAAQIECBAgQIAAgRIEBKQSEFVBgAAB\nAgQIECBAgEA9BASkeoyjXhAgQIAAAQIECBAgUIKAgFQCoioIECBAgAABAgQIEKiHgIBUj3HU\nCwIECBAgQIAAAQIEShAQkEpAVAUBAgQIECBAgAABAvUQEJDqMY56QYAAAQIECBAgQIBACQIC\nUgmIqiBAgAABAgQIECBAoB4CAlI9xlEvCBAgQIAAAQIECBAoQUBAKgFRFQQIECBAgAABAgQI\n1ENAQKrHOOoFAQIECBAgQIAAAQIlCAhIJSCqggABAgQIECBAgACBeggISPUYR70gQIAAAQIE\n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\nggABAgQIECBAgACBeggISPUYR70gQIAAAQIECBAgQKAEAQGpBERVECBAgAABAgQIECBQDwEB\nqR7jqBcECBAgQIAAAQIECJQgICCVgKgKAgQIECBAgAABAgTqISAg1WMc9YIAAQIECBAgQIAA\ngRIEBKQSEFVBgAABAgQIECBAgEA9BASkeoyjXhAgQIAAAQIECBAgUIKAgFQCoioIECBAgAAB\nAgQIEKiHgIBUj3HUCwIECBAgQIAAAQIEShAQkEpAVAUBAgQIECBAgAABAvUQEJDqMY56QYAA\nAQIECBAgQIBACQICUgmIqiBAgAABAgQIECBAoB4CAlI9xlEvCBAgQIAAAQIECBAoQUBAKgFR\nFQQIECBAgAABAgQI1ENAQKrHOOoFAQIECBAgQIAAAQIlCAhIJSCqggABAgQIECBAgACBeggI\nSPUYR70gQIAAAQIECBAgQKAEAQGpBERVECBAgAABAgQIECBQDwEBqR7jqBcECBAgQIAAAQIE\nCJQgICCVgKgKAgQIECBAgAABAgTqISAg1WMc9YIAAQIECBAgQIAAgRIEBKQSEFVBgAABAgQI\nECBAgEA9BASkeoyjXhAgQIAAAQIECBAgUIKAgFQCoioIECBAgAABAgQIEKiHgIBUj3HUCwIE\nCBAgQIAAAQIEShAQkEpAVAUBAgQIECBAgAABAvUQEJDqMY56QYAAAQIECBAgQIBACQICUgmI\nqiBAgAABAgQIECBAoB4CAlI9xlEvCBAgQIAAAQIECBAoQUBAKgFRFQQIECBAgAABAgQI1ENA\nQKrHOOoFAQIECBAgQIAAAQIlCAhIJSCqggABAgQIECBAgACBeggMPSBdd9116a1vfWtaY401\n0korrZS22WabdNZZZ03RPe+889Jee+2VVllllbTlllumE088cU5lHnrooXT44YenzTbbLK25\n5pppjz32SHfffXdHXUXKdBzgCQECBAgQIECAAAECtRAYakC6884708tf/vJ0ySWXpPe+973p\nC1/4QnriiSfSq1/96nT22We3gG+88ca0ww47pEajkY499tg83Oy+++7p+OOP76lMFF6wYEE6\n8sgj0/77758HpYsuuihttdVW6dFHH23VVaRMq7AHBAgQIECAAAECBAjURmBeFjoaw+rNZz/7\n2XTIIYekSy+9NL3kJS/Jm/Hwww+n1VZbLW2xxRbpjDPOyPdFOPrDH/6QLrvsslZT99xzz3T+\n+een3/72t2nevHl5gJqtzIUXXphe9rKXpYULF6addtopr+uGG25I6623XvrWt76VzyYVKdNq\nxDQPYnbq4IMPzs+x8847TykxMTExZd8wd0xOTg7z9M5NgAABAgQIECBAYKQEhjqDFMEkZmua\n4Shkll566bTxxhun2267LYd64IEH0plnnpl22223Drh4fv311+ezT0XKxMGnnnpqWm655fIw\n1axsnXXWSZtvvnk66aST8l1FyjSP9ZMAAQIECBAgQIAAgXoJDDUg7bLLLumwww7rEI1gdO65\n56ZNNtkk33/ttdemJ598MkWQad+az2+99dZUpEwce9VVV6XVV189LbHEEu1V5XVHPUXLtB/8\n5z//Od11112tfzEDFjNaNgIECBAgQIAAAQIEqicwf5SaHPcf7bfffmmppZZKH//4x/Om3X//\n/fnPWMChfVtxxRXzp3fccUdaZpllZi0TBaKu7npif9QV9cRWpExe8Kn/3HLLLWn77bdv35WW\nXXbZjueeECBAgAABAgQIECBQDYGRCUixSEIsvPCjH/0onXzyyfkKc0HYnI3pnvWZP/8vTX/k\nkUcKlWnW1V1P7I+6op6iZfKCT/0nLgmMRSWaW9wT1ZyNau7zkwABAgQIECBAgACBagiMREC6\n99570+te97r0y1/+Mv3gBz9Ir33ta1t6q666av74nnvuae2LB83nMVtTpEwcE+ViRbzuLepq\nzvoUKdN+/Morr5yOPvro1q5YpOEnP/lJ67kHBAgQIECAAAECBAhUR2Co9yAFU6w8F999FAsu\nnHPOOR3hKF5vhp/bb789nra25vO4F6lImTgwyjWPa1WUPYh9zXuaipRpP9ZjAgQIECBAgAAB\nAgTqIzDUgBQLGmy99dbpj3/8Y/r5z3/eWpihnXf55ZdPm266aTrttNPad+fPY0W6+MLXImXi\n4O222y5fHS+WFW9u9913Xx7Mtt1223xXkTLNY/0kQIAAAQIECBAgQKBeAkO9xO7QQw9Nv/nN\nb9IBBxyQ33vUThsLL8Q9SbEdeOCBadddd01HHXVUevvb355++tOf5pe1xRe+NhdoKFImvk9p\ngw02SPvuu2864YQT0jOe8Yz8C2rXWGON/BxxriJlopyNAAECBAgQIECAAIH6CQw1IH3zm9/M\nRSP4dG/xZbHNgBTLgd900035dya9//3vzy+V23///dM+++zTOqxImVjw4fTTT09RNoLS4osv\n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\nAAEC4yAgII3DKOsjAQIECBAgQIAAAQKFBASkQkwKESBAgAABAgQIECAwDgIC0jiMsj4SIECA\nAAECBAgQIFBIQEAqxKQQAQIECBAgQIAAAQLjICAgjcMo6yMBAgQIECBAgAABAoUEBKRCTAoR\nIECAAAECBAgQIDAOAvPHoZP62JvAxMREbwf0ufTk5GSfz6B6AgQIECBAgAABAn8RMIPknUCA\nAAECBAgQIECAAIGnBAQkbwUCBAgQIECAAAECBAg8JdBzQDr++OPTQQcdNCPgwoUL05prrpke\neeSRGct4gQABAgQIECBAgAABAqMoUOgepLvuuis99thjeft/+ctfposvvjjddtttU/oTZc44\n44x08803p0cffTQttdRSU8rYQYAAAQIECBAgQIAAgVEVKBSQjjvuuLRgwYKOPqy22modz9uf\nbLzxxmmFFVZo3+UxAQIECBAgQIAAAQIERl6gUED64Ac/mJ544on0+OOPp7POOiv97ne/S3vt\ntdeUzs2fPz8PRm9+85unvGYHAQIECBAgQIAAAQIERl2gUEBaYokl0kc/+tG8L89//vPT1Vdf\nnT7xiU+Met+0jwABAgQIECBAgAABAj0JFApI7TW+5S1vaX/qMQECBAgQIECAAAECBGoj0HNA\nip6fcsop6Ytf/GJ+qV2sVtdoNKaA3HvvvVP22UGAAAECBAgQIECAAIFRFug5IF1wwQUpZpFi\nhboXvehFaeWVV07z5s0b5T5qGwECBAgQIECAAAECBAoJ9ByQvve976Ull1wyXXbZZem5z31u\noZMoRIAAAQIECBAgQIAAgSoI9PxFsbfffnvaZJNNhKMqjK42EiBAgAABAgQIECDQk0DPASnC\nUcwePfzwwz2dSGECBAgQIECAAAECBAiMukDPASm+/2jVVVdNn/zkJ9Njjz026v3TPgIECBAg\nQIAAAQIECBQW6PkepPii2Gc961npiCOOSEcddVRabbXV0tOf/vQpJ7z88sun7LODAAECBAgQ\nIECAAAECoyzQc0CK5bv/9Kc/pU033XSU+6VtBAgQIECAAAECBAgQ6Fmg54C07777pvhnI0CA\nAAECBAgQIECAQN0Eer4HqW4A+kOAAAECBAgQIECAAIGmQM8zSF/60pfSV77ylebxM/783e9+\nN+NrXiBAgAABAgQIECBAgMAoCvQckFZaaaW0/vrrd/Tlz3/+c7r55ptThKIVVlghve1tb+t4\n3RMCBAgQIECAAAECBAhUQaDngLTHHnuk+DfddsMNN6Ttt98+rbLKKtO9bB8BAgQIECBAgAAB\nAgRGWqDUe5DWWWeddMghh6TPfOYzKWaVbAQIECBAgAABAgQIEKiSQKkBKTq++uoFJdngAABA\nAElEQVSrpwcffDD99re/rZKDthIgQIAAAQIECBAgQCCVGpAefvjh9NWvfjUtvvjiaY011sBL\ngAABAgQIECBAgACBSgn0fA/S17/+9fSNb3xjSicff/zxfJGGu+++O+21115p6aWXnlLGDgIE\nCBAgQIAAAQIECIyyQM8B6bHHHkt//OMfp/QpZo023HDDfJGG97///VNet4MAAQIECBAgQIAA\nAQKjLtBzQHrve9+b4p+NAAECBAgQIECAAAECdRPoOSA1AZ544ol09tlnp9/85jcpLq/beOON\n83/LL798s4ifBAgQIECAAAECBAgQqJTAnALSpZdemt9ndOWVV07p7Gc/+9n0kY98ZMp+OwgQ\nIECAAAECBAgQIDDqAj0HpPvuuy/tvPPOKWaQvvSlL6XNN988LbPMMummm25K3/zmN9NHP/rR\ntOSSS6YPfvCDo9537SNAgAABAgQIECBAgECHQM8BKVaxi5B02WWXpfXXX79V2UYbbZR22mmn\n9O53vzsdc8wxAlJLxgMCBAgQIECAAAECBKoi0PP3IF1++eVpm2226QhH7Z3dd9998y+J/f3v\nf9++22MCBAgQIECAAAECBAiMvEDPASmW846lvmfamq/9+c9/nqmI/QQIECBAgAABAgQIEBhJ\ngZ4D0iabbJLOOeecdPHFF0/pUKPRSJ///OfTSiutlFZfffUpr9tBgAABAgQIECBAgACBURbo\n+R6kffbZJ1+cIS6ze9e73pU222yztOyyy+aLNHzrW9/K702KxRpsBAgQIECAAAECBAgQqJpA\nzwFpqaWWSueff37ae++901FHHdXR3xVWWCEdffTR6R3veEfHfk8IECBAgAABAgQIECBQBYGe\nA1J0atVVV00/+tGP0q233pquueaadPfdd6d11103veAFL8iX/K5Cx7WRAAECBAgQIECAAAEC\n3QI934MUFTz55JMplvu++uqr07bbbpve+ta3pptvvjm99rWvzYNT90k8J0CAAAECBAgQIECA\nQBUEeg5Ijz/+eHrJS16SYjnv6667rtXHWN3uF7/4Rdpxxx3TiSee2NrvAQECBAgQIECAAAEC\nBKoi0HNAOvvss9MVV1yRfvjDH6b999+/1c/Xv/716ZZbbslnlD70oQ/ls0ytFz0gQIAAAQIE\nCBAgQIBABQR6vgfptNNOS1tvvXU+U9TdvxVXXDF94AMfSK95zWvSjTfemN+X1F3GcwJ/rcDE\nxMRfW0Xpx09OTpZepwoJECBAgAABAgQGL9DzDFI0cYkllpixpRGSYnva0542YxkvECBAgAAB\nAgQIECBAYBQFeg5Ir3jFK9JZZ52VL/Xd3aFYvOGII45IK6+8si+K7cbxnAABAgQIECBAgACB\nkRfo+RK77bffPm2++eYpvih2l112SRtvvHF6xjOekW677bb0/e9/P1177bXpO9/5zsh3XAMJ\nECBAgAABAgQIECDQLdBzQFpmmWXST37yk3wVu7gfqX3FutVXXz1/vuuuu3afx3MCBAgQIECA\nAAECBAiMvEDPASl6tOSSS6bjjz8+NRqNfDGGmD1ae+2103Oe85w0b968ke+0BhIgQIAAAQIE\nCBAgQGA6gTkFpGZFEYbWWWed/F9zn58ECBAgQIAAAQIECBCoqkDPizRUtaPaTYAAAQIECBAg\nQIAAgdkEBKTZhLxOgAABAgQIECBAgMDYCAhIYzPUOkqAAAECBAgQIECAwGwCAtJsQl4nQIAA\nAQIECBAgQGBsBASksRlqHSVAgAABAgQIECBAYDYBAWk2Ia8TIECAAAECBAgQIDA2AgLS2Ay1\njhIgQIAAAQIECBAgMJuAgDSbkNcJECBAgAABAgQIEBgbAQFpbIZaRwkQIECAAAECBAgQmE1A\nQJpNyOsECBAgQIAAAQIECIyNgIA0NkOtowQIECBAgAABAgQIzCYgIM0m5HUCBAgQIECAAAEC\nBMZGQEAam6HWUQIECBAgQIAAAQIEZhMQkGYT8joBAgQIECBAgAABAmMjICCNzVDrKAECBAgQ\nIECAAAECswkISLMJeZ0AAQIECBAgQIAAgbEREJDGZqh1lAABAgQIECBAgACB2QQEpNmEvE6A\nAAECBAgQIECAwNgICEhjM9Q6SoAAAQIECBAgQIDAbAIC0mxCXidAgAABAgQIECBAYGwEBKSx\nGWodJUCAAAECBAgQIEBgNgEBaTYhrxMgQIAAAQIECBAgMDYCAtLYDLWOEiBAgAABAgQIECAw\nm4CANJuQ1wkQIECAAAECBAgQGBsBAWlshlpHCRAgQIAAAQIECBCYTUBAmk3I6wQIECBAgAAB\nAgQIjI2AgDQ2Q62jBAgQIECAAAECBAjMJiAgzSbkdQIECBAgQIAAAQIExkZAQBqbodZRAgQI\nECBAgAABAgRmExCQZhPyOgECBAgQIECAAAECYyMgII3NUOsoAQIECBAgQIAAAQKzCQhIswl5\nnQABAgQIECBAgACBsREQkMZmqHWUAAECBAgQIECAAIHZBASk2YS8ToAAAQIECBAgQIDA2AgI\nSGMz1DpKgAABAgQIECBAgMBsAvNnK+B1AgR6F5iYmOj9oD4fMTk52eczqJ4AAQIECBAgUH0B\nM0jVH0M9IECAAAECBAgQIECgJAEBqSRI1RAgQIAAAQIECBAgUH0BAan6Y6gHBAgQIECAAAEC\nBAiUJOAepJIgVUOgagLuk6raiGkvAQIECBAgMAgBM0iDUHYOAgQIECBAgAABAgQqISAgVWKY\nNJIAAQIECBAgQIAAgUEICEiDUHYOAgQIECBAgAABAgQqISAgVWKYNJIAAQIECBAgQIAAgUEI\nCEiDUHYOAgQIECBAgAABAgQqISAgVWKYNJIAAQIECBAgQIAAgUEICEiDUHYOAgQIECBAgAAB\nAgQqISAgVWKYNJIAAQIECBAgQIAAgUEICEiDUHYOAgQIECBAgAABAgQqISAgVWKYNJIAAQIE\nCBAgQIAAgUEICEiDUHYOAgQIECBAgAABAgQqISAgVWKYNJIAAQIECBAgQIAAgUEICEiDUHYO\nAgQIECBAgAABAgQqISAgVWKYNJIAAQIECBAgQIAAgUEICEiDUHYOAgQIECBAgAABAgQqISAg\nVWKYNJIAAQIECBAgQIAAgUEICEiDUHYOAgQIECBAgAABAgQqISAgVWKYNJIAAQIECBAgQIAA\ngUEICEiDUHYOAgQIECBAgAABAgQqISAgVWKYNJIAAQIECBAgQIAAgUEICEiDUHYOAgQIECBA\ngAABAgQqISAgVWKYNJIAAQIECBAgQIAAgUEICEiDUHYOAgQIECBAgAABAgQqISAgVWKYNJIA\nAQIECBAgQIAAgUEICEiDUHYOAgQIECBAgAABAgQqISAgVWKYNJIAAQIECBAgQIAAgUEICEiD\nUHYOAgQIECBAgAABAgQqISAgVWKYNJIAAQIECBAgQIAAgUEICEiDUHYOAgQIECBAgAABAgQq\nISAgVWKYNJIAAQIECBAgQIAAgUEICEiDUHYOAgQIECBAgAABAgQqISAgVWKYNJIAAQIECBAg\nQIAAgUEICEiDUHYOAgQIECBAgAABAgQqISAgVWKYNJIAAQIECBAgQIAAgUEIjFRAeuc735l2\n3nnnaft93nnnpb322iutssoqacstt0wnnnjilHJFyjz00EPp8MMPT5tttllac8010x577JHu\nvvvujrqKlOk4wBMCBAgQIECAAAECBGohMBIBqdFopEMPPTQdd9xx6YknnpgCe+ONN6Yddtgh\nRbljjz02Dze77757Ov7441tli5SJwgsWLEhHHnlk2n///fOgdNFFF6WtttoqPfroo626ipRp\nFfaAAAECBAgQIECAAIHaCMwfdk+uu+66tM8++6Tzzz8/LbfcctM2J8LM+uuvn7797W/nr++4\n4475rM+nP/3p9Pa3vz3NmzcvDzyzlbnwwgvTMccckxYuXJh22mmnvK6YSVpvvfXSySefnM8m\nFSkzbSPtJECAAAECBAgQIECg8gJDn0H68Ic/nO6888507rnnphe96EVTQB944IF05plnpt12\n263jtXh+/fXXp0suuSQVKRMHn3rqqXkIi9mo5rbOOuukzTffPJ100kn5riJlmsf6SYAAAQIE\nCBAgQIBAvQSGPoP0qU99Km244YZpscWmz2rXXnttevLJJ1MEmfat+fzWW2/NL72brcymm26a\nrrrqqrT66qunJZZYor2qvO4rr7wy31ekTMfBnhAgQIAAAQIECBAgUBuBoQekjTbaaJGY999/\nf/76Siut1FFuxRVXzJ/fcccdaZlllpm1TBSIurrrif1RV9QTW5EyecGn/nPzzTe3LteLXY8/\n/viMlwq2H+cxAQIECBAgQIAAAQKjJzD0gDQbSdxfFFv3rM/8+X9p+iOPPJLfgzRbmXg96uqu\nJ/ZHXVFPbEXK5AWf+k8cu9pqq7V23XXXXfmMV2uHBwQIECBAgAABAgQIVEZg+uvaRqj5q666\nat6ae+65p6NVzefLLrtsKlImDo5yzePaK4t9UU/RMu3HRp0//OEPW//e+MY3pgcffLC9iMcE\nCBAgQIAAAQIECFREoDIB6fbbb+8gbT6Pe5GaAam5r1mw+bx5v1KUa+5rlomfsa+XMu3HekyA\nAAECBAgQIECAQH0ERj4gLb/88ikWWDjttNM61ON5LAsey3QXKRMHb7fddum2225Ll156aauu\n++67L51zzjlp2223zfcVKdM62AMCBAgQIECAAAECBGolMPIBKbQPPPDAdMYZZ6Sjjjoq3Xvv\nvemUU05JRx99dDriiCNaCzQUKRPLe2+wwQZp3333Tddcc02KFfD23HPPtMYaa+TniHMVKRPl\nbAQIECBAgAABAgQI1E+gEgFpl112SZ/73OfSggUL8hXnDjjggPyLYeMLZptbkTKxAMPpp5+e\nL8QQQWmttdbK7xc64YQT0lJLLZVXVaRM85x+EiBAgAABAgQIECBQL4GRWsUuLnWbaTvooIPS\nhz70oXTTTTelddddt7VyXXv5ImXiXqP4ctn4ctr47qXplv0uUqb9vB4TIECAAAECBAgQIFAP\ngZEKSLORxpLa66233iKLFSkTFay88sqLrKdomVkrUYAAAQIECBAgQIAAgcoIVOISu8poaigB\nAgQIECBAgAABApUWEJAqPXwaT4AAAQIECBAgQIBAmQICUpma6iJAgAABAgQIECBAoNICAlKl\nh0/jCRAgQIAAAQIECBAoU0BAKlNTXQQIECBAgAABAgQIVFpAQKr08Gk8AQIECBAgQIAAAQJl\nCghIZWqqiwABAgQIECBAgACBSgsISJUePo0nQIAAAQIECBAgQKBMAQGpTE11ESBAgAABAgQI\nECBQaQEBqdLDp/EECBAgQIAAAQIECJQpICCVqakuAgQIECBAgAABAgQqLSAgVXr4NJ4AAQIE\nCBAgQIAAgTIF5pdZmboIECBQpsDExESZ1ZVS1+TkZCn1qIQAAQIECBAYTQEzSKM5LlpFgAAB\nAgQIECBAgMAQBASkIaA7JQECBAgQIECAAAECoykgII3muGgVAQIECBAgQIAAAQJDEBCQhoDu\nlAQIECBAgAABAgQIjKaAgDSa46JVBAgQIECAAAECBAgMQUBAGgK6UxIgQIAAAQIECBAgMJoC\nAtJojotWESBAgAABAgQIECAwBAEBaQjoTkmAAAECBAgQIECAwGgKCEijOS5aRYAAAQIECBAg\nQIDAEAQEpCGgOyUBAgQIECBAgAABAqMpICCN5rhoFQECBAgQIECAAAECQxAQkIaA7pQECBAg\nQIAAAQIECIymgIA0muOiVQQIECBAgAABAgQIDEFAQBoCulMSIECAAAECBAgQIDCaAgLSaI6L\nVhEgQIAAAQIECBAgMAQBAWkI6E5JgAABAgQIECBAgMBoCghIozkuWkWAAAECBAgQIECAwBAE\nBKQhoDslAQIECBAgQIAAAQKjKSAgjea4aBUBAgQIECBAgAABAkMQEJCGgO6UBAgQIECAAAEC\nBAiMpoCANJrjolUECBAgQIAAAQIECAxBQEAaArpTEiBAgAABAgQIECAwmgIC0miOi1YRIECA\nAAECBAgQIDAEAQFpCOhOSYAAAQIECBAgQIDAaAoISKM5LlpFgAABAgQIECBAgMAQBASkIaA7\nJQECBAgQIECAAAECoykwfzSbpVUECBCohsDExMTINXRycnLk2qRBBAgQIECgKgJmkKoyUtpJ\ngAABAgQIECBAgEDfBQSkvhM7AQECBAgQIECAAAECVREQkKoyUtpJgAABAgQIECBAgEDfBQSk\nvhM7AQECBAgQIECAAAECVREQkKoyUtpJgAABAgQIECBAgEDfBQSkvhM7AQECBAgQIECAAAEC\nVREQkKoyUtpJgAABAgQIECBAgEDfBQSkvhM7AQECBAgQIECAAAECVREQkKoyUtpJgAABAgQI\nECBAgEDfBQSkvhM7AQECBAgQIECAAAECVREQkKoyUtpJgAABAgQIECBAgEDfBQSkvhM7AQEC\nBAgQIECAAAECVREQkKoyUtpJgAABAgQIECBAgEDfBQSkvhM7AQECBAgQIECAAAECVREQkKoy\nUtpJgAABAgQIECBAgEDfBQSkvhM7AQECBAgQIECAAAECVREQkKoyUtpJgAABAgQIECBAgEDf\nBQSkvhM7AQECBAgQIECAAAECVREQkKoyUtpJgAABAgQIECBAgEDfBQSkvhM7AQECBAgQIECA\nAAECVREQkKoyUtpJgAABAgQIECBAgEDfBQSkvhM7AQECBAgQIECAAAECVREQkKoyUtpJgAAB\nAgQIECBAgEDfBQSkvhM7AQECBAgQIECAAAECVREQkKoyUtpJgAABAgQIECBAgEDfBQSkvhM7\nAQECBAgQIECAAAECVREQkKoyUtpJgAABAgQIECBAgEDfBQSkvhM7AQECBAgQIECAAAECVREQ\nkKoyUtpJgAABAgQIECBAgEDfBQSkvhM7AQECBAgQIECAAAECVREQkKoyUtpJgAABAgQIECBA\ngEDfBQSkvhM7AQECBAgQIECAAAECVREQkKoyUtpJgAABAgQIECBAgEDfBQSkvhM7AQECBAgQ\nIECAAAECVREQkKoyUtpJgAABAgQIECBAgEDfBQSkvhM7AQECBAgQIECAAAECVREQkKoyUtpJ\ngAABAgQIECBAgEDfBQSkvhM7AQECBAgQIECAAAECVREQkKoyUtpJgAABAgQIECBAgEDfBQSk\n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\nmmMIECBAgAABAgQIEKilgIBUy2HVKQIECBAgQIAAAQIE5iIgIM1FzTEECBAgQIAAAQIECNRS\nQECq5bDqFAECBAgQIECAAAECcxEQkOai5hgCBAgQIECAAAECBGopICDVclh1igABAgQIECBA\ngACBuQgISHNRcwwBAgQIECBAgAABArUUmF/LXukUAQIECBAgQIDAUAUmJiaGev7pTj45OTnd\nbvsIdAiYQerg8IQAAQIECBAgQIAAgXEWEJDGefT1nQABAgQIECBAgACBDgEBqYPDEwIECBAg\nQIAAAQIExllAQBrn0dd3AgQIECBAgAABAgQ6BASkDg5PCBAgQIAAAQIECBAYZwEBaZxHX98J\nECBAgAABAgQIEOgQEJA6ODwhQIAAAQIECBAgQGCcBQSkcR59fSdAgAABAgQIECBAoEPAF8V2\ncHhCgAABAgQIECAwLgK+zHZcRrq3fppB6s1LaQIECBAgQIAAAQIEaiwgINV4cHWNAAECBAgQ\nIECAAIHeBASk3ryUJkCAAAECBAgQIECgxgICUo0HV9cIECBAgAABAgQIEOhNQEDqzUtpAgQI\nECBAgAABAgRqLCAg1XhwdY0AAQIECBAgQIAAgd4EBKTevJQmQIAAAQIECBAgQKDGAgJSjQdX\n1wgQIECAAAECBAgQ6E1AQOrNS2kCBAgQIECAAAECBGosICDVeHB1jQABAgQIECBAgACB3gQE\npN68lCZAgAABAgQIECBAoMYCAlKNB1fXCBAgQIAAAQIECBDoTUBA6s1LaQIECBAgQIAAAQIE\naiwgINV4cHWNAAECBAgQIECAAIHeBASk3ryUJkCAAAECBAgQIECgxgICUo0HV9cIECBAgAAB\nAgQIEOhNQEDqzUtpAgQIECBAgAABAgRqLCAg1XhwdY0AAQIECBAgQIAAgd4EBKTevJQmQIAA\nAQIECBAgQKDGAgJSjQdX1wgQIECAAAECBAgQ6E1AQOrNS2kCBAgQIECAAAECBGosICDVeHB1\njQABAgQIECBAgACB3gTm91ZcaQIECBAgQIAAAQIEBiUwMTExqFMVPs/k5GThslUsaAapiqOm\nzQQIECBAgAABAgQI9EVAQOoLq0oJECBAgAABAgQIEKiigIBUxVHTZgIECBAgQIAAAQIE+iIg\nIPWFVaUECBAgQIAAAQIECFRRQECq4qhpMwECBAgQIECAAAECfREQkPrCqlICBAgQIECAAAEC\n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\n3rJmLTcAAAAASUVORK5CYII=",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "LakeCounts <- ggplot(LAGOSlocations, aes(x = state)) + \n",
    "  geom_bar(stat = \"count\") +\n",
    "  ggtitle(\"Lake Count by State\")+\n",
    "  theme(plot.title = element_text(margin = margin(b = 10), size = 18, hjust=0.5, vjust=0.5, face='bold'),axis.text.x = element_text(color = \"black\", size=10), axis.text.y = element_text(color = \"black\", size=10))\n",
    "print(LakeCounts)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Trophic State as a Water Quality Metric"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Robert Carlson's 1977 paper, \"A trophic state index for lakes,\" established the first numeric categorization system for a lake's **trophic state**, the amount of biomass a given system can sustain. Trophic state is a useful water quality metric, as it can give insight into the propensity of a system to develop algal blooms, the degree of nutrient loading in the system, and a range of other potential water quality concerns experienced by other lakes with a similar trophic state (e.g., hypoxia).\n",
    "\n",
    ">A direct measure of trophic state is the amount of biomass or phytoplankton in the system. The more nutrients in a system, the  higher the amount of biomass the system can support. The more biomass in a system, the lower the clarity of the water. \n",
    "\n",
    "To calculate the **Trophic State Index** (specific number that correlates to a specific trophic state) Three variables can be used. Note these should not be used to define trophic state, but as indicators of the broader condition. Comparing these values in a given lake can give insight into the broader mechanisms at play.\n",
    "\n",
    "**Chlorophyll a concentration** A proxy for algal (phytoplankton) biomass. Pros: direct measure of primary productivity.\n",
    "Higher chlorophyll-->higher phytoplankton biomass\n",
    "\n",
    "**Secchi disk transparency** A quantitative measure of water clarity in which you drop a colored disk into the lake to see how far down you can make out the colors. Pros: simple and cheap. Cons: may yield a high TSI in highly colored lakes and in lakes where particulate matter is comprised of non-algal material. This method is inversely related to chlorophyll concentrations. Suspended sediment in the system may decrease your calculated Sechhi depth. \n",
    "\n",
    "**Total phosphorus (TP)** A nutrient essential for growth of primary producers. Assumptions: phosphorus is the limiting nutrient for phytoplankton growth over the course of decades (this assumption often holds only for summer months and this isn't true for every lake). When total phosphorus is high, the lake will support more primary production. \n",
    "\n",
    "## Equations we use to calculate trophic state index:\n",
    "\n",
    "**TSI(Chl) = 10(6 - (2.04 - 0.68 ln Chl/ln 2))**\n",
    "\n",
    "**TSI(SD) = 10(6 - (ln SD/ln 2))**\n",
    "\n",
    "**TSI(TP) = 10(6 - (ln(48/TP)/ln 2))**\n",
    "\n",
    "TSI values correspond to the following trophic states: \n",
    "\n",
    "**0-40**: Oligotrophic\n",
    "\n",
    "**40-50**: Mesotrophic\n",
    "\n",
    "**50-70**: Eutrophic\n",
    "\n",
    "**70-100**: Hypereutrophic"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### View the dimensions of the nutrient data frame "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>816095</li><li>92</li></ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 816095\n",
       "\\item 92\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 816095\n",
       "2. 92\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] 816095     92"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dim(LAGOSnutrient)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Create new data frame \n",
    "First we will join the nutrient and locations data frames by their common key value column. Next we will select all relevant fields and create sample year, sample month, and season columns. Finally we will drop all observations with missing values. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "ename": "ERROR",
     "evalue": "Error in left_join(LAGOSnutrient, LAGOSlocations, by = \"lagoslakeid\") %>% : could not find function \"%>%<-\"\n",
     "output_type": "error",
     "traceback": [
      "Error in left_join(LAGOSnutrient, LAGOSlocations, by = \"lagoslakeid\") %>% : could not find function \"%>%<-\"\nTraceback:\n"
     ]
    }
   ],
   "source": [
    "LAGOStrophic <-\n",
    "left_join(LAGOSnutrient, LAGOSlocations, by = \"lagoslakeid\") %>%  #join of lagosnutrient and LAGOS locations by lagoslakeid\n",
    "  \n",
    "  select(lagoslakeid, sampledate, chla, tp, secchi, \n",
    "         gnis_name, lake_area_ha, state, state_name) %>% #select relevant columns \n",
    "  \n",
    "  mutate(sampleyear = year(sampledate), \n",
    "         samplemonth = month(sampledate), \n",
    "         season = as.factor(quarter(sampledate, fiscal_start = 12))) %>% #Creating a season column. Quarter function divides your year into 4 quarters of three months. Here we start it at month 12, so winter is dec, january, feb, spring is march, april, may, and so on. We want these numbers to be considered factors. \n",
    "  \n",
    "  \n",
    "  drop_na(chla:secchi) %>% #removing NA's from columns chla:secchi. If there is a NA in the row, it'll remove the entire row. \n",
    "  levels(LAGOStrophic$season) <- c(\"Winter\", \"Spring\", \"Summer\", \"Fall\") #In Season Column, replace the season numbers (1-4) with their actual names \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plot Chlorophyll Concentrations by Month"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "chlbymonth <-  ggplot(LAGOStrophic, \n",
    "       aes(x = as.factor(samplemonth), y = chla, color = sampleyear)) +\n",
    "  geom_jitter(alpha = 0.2) +\n",
    "  +\n",
    "  labs(x = \"Month\", y = expression(Chlorophyll ~ a ~ (mu*g / L)), color = \"Year\") +\n",
    "  scale_color_viridis_c(option = \"magma\")\n",
    "print(chlbymonth)ggtitle(\"Chlorophyll Concentrations by Month\")+\n",
    " theme(plot.title = element_text(margin = margin(b = 10), size = 18, hjust=0.5, vjust=0.5, face='bold'), axis.text.x = element_text(color = \"black\", size=10), axis.text.y = element_text(color = \"black\", size=10))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plot Secchi Depth Concentrations by Month"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "secchibymonth <-  ggplot(LAGOStrophic, \n",
    "       aes(x = as.factor(samplemonth), y = secchi, color = sampleyear)) +\n",
    "  geom_jitter(alpha = 0.2) +\n",
    "  ggtitle(\"Secchi Depth Concentrations by Month\")+\n",
    " theme(plot.title = element_text(margin = margin(b = 10), size = 18, hjust=0.5, vjust=0.5, face='bold'), axis.text.x = element_text(color = \"black\", size=10), axis.text.y = element_text(color = \"black\", size=10))+\n",
    "  labs(x = \"Month\", y = \"Secchi depth (m)\", color = \"Year\") +\n",
    "  scale_color_viridis_c(option = \"magma\")\n",
    "print(secchibymonth)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plot Total Phosphorus Concentrations by Month"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "tpbymonth <-  ggplot(LAGOStrophic, \n",
    "       aes(x = as.factor(samplemonth), y = tp, color = sampleyear)) +\n",
    "  geom_jitter(alpha = 0.2) +\n",
    "  ggtitle(\"Total Phosphorus Concentrations by Month\")+\n",
    " theme(plot.title = element_text(margin = margin(b = 10), size = 18, hjust=0.5, vjust=0.5, face='bold'), axis.text.x = element_text(color = \"black\", size=10), axis.text.y = element_text(color = \"black\", size=10))+\n",
    "  labs(x = \"Month\", y = expression(Total ~ P ~ (mu*g / L)), color = \"Year\") +\n",
    "  scale_color_viridis_c(option = \"magma\")\n",
    "print(tpbymonth)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "What do you notice about the seasonality of these variables? If we were to characterize a lake based on the value of a given variable, how might seasonality affect our interpretations?\n",
    ">"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Calculating Trophic State Index\n",
    "Let's add a TSI value calculated from each of the three water quaity measurements to the data frame. Let's also add a column that designates the lake as oligotrophic, mesotrophic, eutrophic, or hypereutrophic based on the TSI.chl value. Any data that doesn't fall into the first three categories will be called hypereutrophic."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "LAGOStrophic <- \n",
    "  mutate(LAGOStrophic, \n",
    "  TSI.chl = round(10*(6 - (2.04 - 0.68*log(chla)/log(2)))),\n",
    "  TSI.secchi = round(10*(6 - (log(secchi)/log(2)))), \n",
    "  TSI.tp = round(10*(6 - (log(48/tp)/log(2)))), \n",
    "  trophic.class.cl = ###Create trophic class based on the chlorophyll column. We chose chlorophyll over the others b/c of sechhi depth errors, and chlorophyll is the most direct productivity measurement.  \n",
    "  ifelse(TSI.chl < 40, \"Oligotrophic\", \n",
    "  ifelse(TSI.chl < 50, \"Mesotrophic\",\n",
    "  ifelse(TSI.chl < 70, \"Eutrophic\", \"Hypereutrophic\"))))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Create 4 factor levels for the \"trophic.class\" field "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "LAGOStrophic$trophic.class <- \n",
    "  factor(LAGOStrophic$trophic.class,\n",
    "         levels = c(\"Oligotrophic\", \"Mesotrophic\", \"Eutrophic\", \"Hypereutrophic\"))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Create 4 factor levels for the \"trophic.season\"field"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "LAGOStrophic$season <- \n",
    "  factor(LAGOStrophic$season,\n",
    "         levels = c(\"Spring\", \"Summer\", \"Fall\", \"Winter\"))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plot Chlorophyll point values against Secchi Depth point values and add a reference line with slope of 1 and intercept of 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "chlvssecchi <- ggplot(LAGOStrophic, aes(x = TSI.chl, y = TSI.secchi)) +\n",
    "  geom_point(alpha = 0.1, color = \"#ec6163ff\") + \n",
    "  scale_y_continuous(limits = c(0, 100)) +\n",
    "  scale_x_continuous(limits = c(0, 100)) +\n",
    "  geom_abline(slope = 1, intercept = 0) \n",
    "print(chlvssecchi)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plot Chlorophyll point values against Total Phosphorus point values and add a reference line with a slope of 1 and intercept of 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "chlvstp <- ggplot(LAGOStrophic, aes(x = TSI.chl, y = TSI.tp)) +\n",
    "  geom_point(alpha = 0.1, color = \"#ec6163ff\") + \n",
    "  scale_y_continuous(limits = c(0, 100)) +\n",
    "  scale_x_continuous(limits = c(0, 100)) +\n",
    "  geom_abline(slope = 1, intercept = 0)  \n",
    "print(chlvstp)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "What is the observed relationship of the two plots, and how does it depart from the 1:1 relationship? What do values above or below the 1:1 line tell us about the conditions present in a lake?\n",
    ">"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Create Violin Plot comparing State and Chlorophyll A concentrations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "stateTSIviolin <- ggplot(LAGOStrophic, aes(x = state, y = TSI.chl)) +\n",
    "  geom_violin(draw_quantiles = 0.50)\n",
    "print(stateTSIviolin)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Again, remember the values for the Trophic State Index (the TSI.chl field): \n",
    "\n",
    "0-40: Oligotrophic\n",
    "\n",
    "40-50: Mesotrophic\n",
    "\n",
    "50-70: Eutrophic\n",
    "\n",
    "70-100: Hypereutrophic\n",
    "\n",
    "Which states have more lakes negatively impacted by humans? How can you tell?\n",
    ">"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Create Bar Plot comparing State and Number of Observations; fill by trophic class"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "stateTSIbar <- ggplot(LAGOStrophic, aes(x = state, fill = trophic.class)) +\n",
    "  geom_bar(stat = \"count\", position = position_dodge(preserve = \"single\")) +\n",
    "  theme(legend.position = \"top\") +\n",
    "  labs(x = \"\", y = \"Number of Observations\", fill = \"Trophic Class\") +\n",
    "  scale_fill_viridis_d(option = \"magma\", begin = 0.2, end = 0.8, direction = -1)\n",
    "print(stateTSIbar)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Create Jitter Plot comparing Trophic State Index by State using the geom_rect function to represent TSI"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "stateTSIjitter <- ggplot(LAGOStrophic, aes(x = state, y = TSI.chl, color = season)) +\n",
    "  geom_rect(xmin = -1, xmax = 19, ymin = 0, ymax = 40, ###these are dimensions of geom_rect. xmin=-1 to fill up plot on left hand side. \n",
    "            fill = \"gray90\", color = \"gray90\") +\n",
    "  geom_rect(xmin = -1, xmax = 19, ymin = 40, ymax = 50,\n",
    "            fill = \"gray80\", color = \"gray80\") +\n",
    "  geom_rect(xmin = -1, xmax = 19, ymin = 50, ymax = 70,\n",
    "            fill = \"gray70\", color = \"gray70\") +\n",
    "  geom_rect(xmin = -1, xmax = 19, ymin = 70, ymax = 100,\n",
    "            fill = \"gray60\", color = \"gray60\") +\n",
    "  geom_jitter(alpha = 0.3) +\n",
    "  # geom_hline(yintercept = 40, lty = 2) +\n",
    "  # geom_hline(yintercept = 50, lty = 2) +\n",
    "  # geom_hline(yintercept = 70, lty = 2) +\n",
    "  labs(x = \"\", y = \"TSI(chl)\") +\n",
    "  scale_y_continuous(limits = c(0, 100)) +\n",
    "  theme(legend.position = \"top\") +\n",
    "  scale_color_viridis_d(option = \"magma\")\n",
    "\n",
    "options(repr.plot.width=8, repr.plot.height=14)\n",
    "print(stateTSIjitter)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "What insights do we gain from the different visualizations?\n",
    "\n",
    "> Violin: \n",
    "\n",
    "> Bar: \n",
    "\n",
    "> Jitter:"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "R",
   "language": "R",
   "name": "ir"
  },
  "language_info": {
   "codemirror_mode": "r",
   "file_extension": ".r",
   "mimetype": "text/x-r-source",
   "name": "R",
   "pygments_lexer": "r",
   "version": "4.0.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
